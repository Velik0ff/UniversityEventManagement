script.
	let all_rooms = !{JSON.stringify(rooms)};

	let unavailable_rooms = [];

	function addRoomField() {
		all_rooms.forEach(function(room){
			if (!checkRoomAvailability(room)) {
				unavailable_rooms.push(room._id);
			}
		});

		$('<div>').attr('class', 'row form-group').attr('id', 'rowRoom' + room_count).appendTo('#rooms');

		$('<div>')
			.attr('class', 'col')
			.attr('id', 'roomNameCol' + room_count)
			.appendTo('#rowRoom' + room_count);
		$('<label>').attr('for', 'roomID' + room_count).appendTo('#roomNameCol' + room_count).text('Room ' + room_count + ' Name');
		$('<select>')
			.attr('class', 'form-control')
			.attr('id', 'selectRoom' + room_count)
			.attr('name', 'roomID' + room_count)
			.attr('onChange', 'selectedRoom(this)')
			.appendTo('#roomNameCol' + room_count);
		let select = $('#selectRoom' + room_count);
		all_rooms.forEach(function (room) {
			if (unavailable_rooms.includes(room._id)) {
				select.append('<option value="'+room._id+'" disabled>' + room.roomName + '</option>');
			} else {
				select.append('<option value="' + room._id + '">' + room.roomName + '</option>');
			}
		});

		$('<div>')
			.attr('class', 'col')
			.attr('id', 'removeRoomCol' + room_count)
			.attr('style', 'flex-grow:0;position:relative;')
			.appendTo('#rowRoom' + room_count);
		$('<a>')
			.attr('class', 'options-btn')
			.attr('href', '#')
			.attr('id', 'removeRoomIcon' + room_count)
			.attr('style', 'position:absolute;bottom:0;left:0')
			.attr('onclick', '$(this).parent().parent().remove();checkAddedRooms();')
			.appendTo('#removeRoomCol' + room_count);
		$('<i>').attr('class', 'material-icons md-18').text('delete').appendTo('#removeRoomIcon' + room_count);

		room_count++;

		let selected_option = select.val();

		unavailable_rooms.push(selected_option);

		let option = $('#rooms select option[value="' + selected_option + '"]')
		option.attr('disabled', true);

		for (let i = 0; i < select.find('option').length; i++) {
			if (select.find('option')[i].value === selected_option) {
				select.find('option')[i].removeAttribute('disabled');
				break;
			}
		}

		checkAddedRooms();
	}

	function selectedRoom(event) {
		if (!unavailable_rooms.includes(event.value)) {
			unavailable_rooms.push(event.value);

			$('#rooms select option[value="' + event.value + '"]').attr('disabled', true);

			event.options[event.selectedIndex].removeAttribute('disabled');
		}

		checkAddedRooms();
	}

	function checkAddedRooms() {
		for (let i = 0; i < unavailable_rooms.length; i++) {
			let option = $('#rooms select option[value="' + unavailable_rooms[i] + '"]:selected');
			let room_available = false;

			all_rooms.forEach(function(room){
				if(room._id == unavailable_rooms[i] && checkRoomAvailability(room)) room_available = true;
			});

			console.log(option.length+" "+unavailable_rooms[i]+" "+room_available);
			if (option.length < 1 && room_available) {
				console.log(true);
				$('#rooms select option[value="' + unavailable_rooms[i] + '"]').removeAttr('disabled');
				unavailable_rooms.splice(i, 1);
			}
		}
	}

	function checkRoomAvailability(room){
		if(room) {
			if(room.events && room.events.length === 0 || $("#date").val() === "") {
				return true;
			} else if(room.events && room.events.length > 0) {
				let room_available = false;

				room.events.forEach(function (roomEvent) {
					/* Get time to midnight after the event end */
					let startDate = Date.parse(roomEvent.date);
					let endDate = roomEvent.endDate ? Date.parse(roomEvent.endDate) : false;
					let eventStartDate = Date.parse($("#date").val());
					let eventEndDate = $("#endDate").val() ? Date.parse($("#endDate").val()) : false;
					let now = new Date();
					let year = now.getUTCFullYear();
					let month = now.getUTCMonth();
					let day = now.getUTCDate();

					let startDayHour = Date.UTC(year, month, day, 0, 0, 0, 0);
					let midnight = startDayHour + 86400000;

					let time_left = midnight - now.getTime();
					/* End Get time to midnight after the event end */

					if (((endDate && endDate < eventStartDate) ||
							(startDate && !endDate && ((!eventEndDate && startDate >= eventStartDate + time_left) ||
									(startDate + time_left <= eventStartDate) ||
									(eventEndDate && eventEndDate + time_left <= startDate)
							)))) {
						room_available = true;
					}
				});

				return room_available;
			} else return true;
		} else {
			console.log("pedal2");
			return false;
		}
	}