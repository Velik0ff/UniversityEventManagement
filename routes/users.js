const express = require('express');
const router = express.Router();
const short = require('short-uuid');
const nodemailer = require('nodemailer');

/* Model */
const User = require('../models/staff_user');
/* End Model */

const list = [{id:1234,name:"User Name",email:"john.doe@email.com"},{id:1235,name:"User Name",email:"john.doe@email.com"},{id:1236,name:"User Name",email:"john.doe@email.com"}];

/* Links */
const viewLink = "view-user";
const editLink = "edit-user";
const addLink = "add-user";
/* End Links */

/* Functions */
function addUser(){

}

async function sendInvitationEmail(email, password, role){
  // Generate test SMTP service account from ethereal.email
  // Only needed if you don't have a real mail account for testing
  let testAccount = await nodemailer.createTestAccount();

  // create reusable transporter object using the default SMTP transport
  let transporter = nodemailer.createTransport({
    host: "smtp.ethereal.email",
    port: 587,
    secure: false, // true for 465, false for other ports
    auth: {
      user: testAccount.user, // generated ethereal user
      pass: testAccount.pass // generated ethereal password
    }
  });

  // send mail with defined transport object
  let info = await transporter.sendMail({
    from: '"University of Liverpool Event System" <no-reply@uol-events.co.uk>', // sender address
    to: email, // list of receivers
    subject: "You have been invited to be a staff member", // Subject line
    text: email+":"+password, // plain text body
    html: "Hello,</br>" +
      "You have been invited to be a staff member with role: " + role +
      "</br>" +
      "Your username is this email: " + email +
      "</br>" +
      "The automatic password generated by the system is: " + password +
      "</br><b>You will be prompted to change this password at the first login!</b></br>" +
      "<b>If you think that this email should not be sent to you, please ignore it or report back to: sglvelik@liv.ac.uk</b>"// html body
  });

  console.log("Message sent: %s", info.messageId);
  // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>

  // Preview only available when sending through an Ethereal account
  console.log("Preview URL: %s", nodemailer.getTestMessageUrl(info));
  // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...
}
/* End Functions */

router.get('/list-users', function(req, res, next) {

  let columns = ["ID", "Full Name", "Email", "Options"];


  res.render('list', {
    title: 'Staff List',
    list:list,
    columns:columns,
    editLink: editLink,
    viewLink: viewLink,
    addLink: addLink,
    error:""
  });
});

router.get('/'+viewLink, function(req, res, next) {
  /* Logic to get info from database */

  /* End Logic to get info from database */



  list.forEach((item)=>{
    if(item.id == req.query.id){
      // let rows = [{"ID":}, "Event Name"];
      // let item_info = [item.id,item.name];

      let item_info = {
        "ID":item.id,
        "Name":item.name,
        "Email":"john.doe@email.com",
        "Role":"IT Support",
      }

      res.render('view', {
        title: 'Viewing staff member: '+item.name,
        // rows: rows,
        item:item_info,
        listLink: 'list-users',
        editLink: 'edit-user?id='+item.id
      });
    }
  });
});

router.get('/'+editLink, function(req, res, next) {
  list.forEach((item)=>{
    if(item.id == req.query.id){
      // let rows = [{"ID":}, "Event Name"];
      // let item_info = [item.id,item.name];

      let item_info = {
        "ID":item.id,
        "Name":item.name,
        "Email":"john.doe@email.com",
        "Role":"IT Support",
      }

      res.render('edit', {
        title: 'Editing staff member: '+item.name,
        // rows: rows,
        item:item_info,
        editLink: 'view-user?id='+item.id,
        cancelLink: 'view-user?id='+item.id
      });
    }
  });
});

router.post('/'+addLink, function(req, res, next) {
  var error_msg = "";
  var message = "";
  let password_to_insert = short().new();

  console.log("+"+req.body.email+"+");

  let new_user = new User({ // new user object to be inserted
    email: req.body.email,
    password: password_to_insert,
    role: req.body.role
  });

  let reg = /^([a-z0-9]+)[-_.]?([a-z0-9]+)@([a-z0-9]{2,}).([a-z0-9]{2,})$/i;

  console.log(reg.test(req.body.email))

  /* Insert new user */
  new_user.save(function (error, userDoc) {
    if (!error) {
      message = "Successfully added new user with email: " + req.body.email;
      console.log(message);
      sendInvitationEmail(req.body.email, password_to_insert)
    } else {
      if(error.name === "ValidationError"){ // check if the error is from the validator
        if (error.errors.email.message !== "" && error.errors.email.message !== null) {
          error_msg = error.errors.email.message
        }
        console.log(error_msg)
      } else {
        error_msg = "Unknown error has occurred during adding of the user. Please try again later.";
        console.log(error);
      }
    }
  });
  /* End Insert new user */

  let fields = [{name:"Name",type:"text",identifier:"name"},
    {name:"Email",type:"email",identifier:"email"},
    {name:"Role",type:"text",identifier:"role"}]

  res.render('add', {
    title: 'Add New Staff Member',
    // rows: rows,
    fields:fields,
    cancelLink: 'list-users',
    customFields:false,
    error: error_msg,
    message: message
  });
});

module.exports = router;
